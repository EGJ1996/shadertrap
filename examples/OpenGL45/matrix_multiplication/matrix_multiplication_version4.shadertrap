# Copyright 2021 The ShaderTrap Project Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

// Parallelized matrix multiplication example.

GL 4.5

CREATE_BUFFER array1 SIZE_BYTES 1024 INIT_VALUES  
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31
    uint 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31

CREATE_BUFFER array2 SIZE_BYTES 1024 INIT_VALUES 
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32
    uint 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32

CREATE_BUFFER result SIZE_BYTES 1024 INIT_VALUES 
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    uint 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

CREATE_BUFFER expected SIZE_BYTES 1024 INIT_VALUES
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192
    uint 512 1024 1536 2048 2560 3072 3584 4096 4608 5120 5632 6144 6656 7168 7680 8192

BIND_SHADER_STORAGE_BUFFER BUFFER array1 BINDING 0
BIND_SHADER_STORAGE_BUFFER BUFFER array2 BINDING 1
BIND_SHADER_STORAGE_BUFFER BUFFER result BINDING 2

DECLARE_SHADER shader KIND COMPUTE
#version 450

layout(local_size_x=1, local_size_y=1, local_size_z=1) in;

layout(std430,binding = 0) buffer array1 {
  uint[16][16] data1;
};
layout(std430,binding=1) buffer array2 {
  uint[16][16] data2;
};
layout(std430,binding=2) buffer result{
  uint[16][16] res;
};

void main() {
  for(int i = 0; i < gl_NumWorkGroups[0]; i++){
    res[gl_WorkGroupID[0]][gl_WorkGroupID[1]] += (data1[gl_WorkGroupID[0]][i] * data2[i][gl_WorkGroupID[1]]);
  }
}
END

COMPILE_SHADER shader_compiled SHADER shader
CREATE_PROGRAM compute_prog SHADERS shader_compiled

RUN_COMPUTE
    PROGRAM compute_prog
    NUM_GROUPS MAT_SIZE MAT_SIZE 1

ASSERT_EQUAL BUFFERS expected result
